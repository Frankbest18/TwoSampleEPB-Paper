n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
D = diag(1,2,3,4)
D
n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
D = diag(c(1,2,3,4))
D
n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
D = diag(c(1,2,3,4))
D^(-1/2)
n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
D = diag(c(1,2,3,4))
solve(D)
n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
D = diag(c(1,2,3,4))
solve(D)^(1/2)
n = 4
In = diag(rep(1, n))
En = matrix(1, n, n)
solve(In - n * En)
(In - n * En) %*% (In - n * En)
D = diag(c(1,2,3,4))
solve(D)^(1/2) %*% D %*% solve(D)^(1/2)
library(limma)
library(edgeR)
source('voomByGroup.R')
counts = readRDS("counts.rds")
group = readRDS("group_id.rds")
group
high_expression_counts = counts[rowSums(counts)>50,]
filter = (group == 'HC' | group == 'Asymptomatic')
filtered_counts = high_expression_counts[, filter]
filtered_group = group[filter]
y = DGEList(filtered_counts)
y$samples$group
y = calcNormFactors(y)
y$samples$group <- filtered_group
y$samples
group_assignment = y$samples$group
design = model.matrix(~0 + group_assignment)
design
R = y$samples$lib.size * y$samples$norm.factors
design
Y = t(log2((t(filtered_counts) + 0.5)/(R+1) * 1e6))
Y = normalizeBetweenArrays(Y, method='none')
Y1 = Y[, c(1,2,6,7,8,9,10)]
Y2 = Y[, c(3,4,5)]
mean_Y1 = rowMeans(Y1)
mean_Y2 = rowMeans(Y2)
var_Y1 = apply(Y1, 1, var)
var_Y2 = apply(Y2, 1, var)
n1 = ncol(Y1)
n2 = ncol(Y2)
beta = cbind(mean_Y1, mean_Y2)
Y_hat = beta %*% t(design)
s = sqrt(((n1-1) * var_Y1 + (n2-1) * var_Y2) / (n1+n2-2))
r = rowMeans(Y) + mean(log2(R+1))-log2(1e6)
s_std = sqrt(s)
l = lowess(r,s_std,f=0.5)
plot(r,s_std, xlab="log2( count size + 0.5 )",ylab="Sqrt( standard deviation )",pch=16,cex=0.25)
title("voom: Mean-variance trend")
lines(l,col="red")
f = approxfun(l, rule=2, ties=list("ordered", mean))
lambda = t(t(Y_hat) + log2(R+1))-log2(1e6)
w = 1/(f(lambda)^4)
dim(w) = dim(Y_hat)
v = voom(y, design = design, plot = TRUE)
vvqw = voomWithQualityWeights(y, design = design, plot = TRUE)
vvqw_block = voomWithQualityWeights(y, design = design, var.group= group_assignment, plot = TRUE)
vbg = voomByGroup(y, design = design, group = group_assignment, plot = 'combine')
contr.matrix <- makeContrasts(
AvsH = group_assignmentAsymptomatic - group_assignmentHC,
levels = colnames(design))
contr.matrix
w_lm = lm(v$E[1, ] ~ 0 + design, weights = v$weights[1, ])
w_lm$coefficients
fit <- lmFit(v, design)
fit$coefficients[1, ]
D = diag(v$weights[1, ])
D
D = diag(v$weights[1, ])
Y = v$E[1, ]
X = design
D = diag(v$weights[1, ])
Y = v$E[1, ]
X = design
D = diag(v$weights[1, ])
Y = v$E[1, ]
X = design
X
D = diag(v$weights[1, ])
Y = v$E[1, ]
X = design
fit
w_lm$fitted.values
fit
(v$E[1, ] - w_lm$fitted.values)^2
fit
(v$E[1, ] - w_lm$fitted.values)^2[filter]
fit
(v$E[1, ] - w_lm$fitted.values)^2
fit
((v$E[1, ] - w_lm$fitted.values)^2)[1]
fit
((v$E[1, ] - w_lm$fitted.values)^2)[filter]
fit
sum(((v$E[1, ] - w_lm$fitted.values)^2)[filter])
fit
((v$E[1, ] - w_lm$fitted.values)^2)[filter]
fit
((v$E[1, ] - w_lm$fitted.values)^2)[filter,]
((v$E[1, ] - w_lm$fitted.values)^2)[filter]
fit
fit$sigma
fit$sigma
fit$sigma[1]
dim(fit$sigma) = dim(Y_hat)
dim(fit$sigma)
fit$sigma
length(fit$sigma)
length(fit$sigma)
length(Y_hat)
length(fit$sigma)
length(Y_hat)
fit$sigma[1]
sum((w_lm$model$`v$E[1, ]` - w_lm$fitted.values)^2)
length(fit$sigma)
length(Y_hat)
fit$sigma[1]
sqrt(sum((w_lm$model$`v$E[1, ]` - w_lm$fitted.values)^2))
(length(w_lm$model$`v$E[1, ]`) - 1)
length(fit$sigma)
length(Y_hat)
fit$sigma[1]
sqrt(sum((w_lm$model$`v$E[1, ]` - w_lm$fitted.values)^2) / 9)
length(fit$sigma)
length(Y_hat)
fit$sigma[1]
sqrt(sum((w_lm$model$`v$E[1, ]` - w_lm$fitted.values)^2) / 9))
length(fit$sigma)
length(Y_hat)
fit$sigma[1]
sqrt(sum((w_lm$model$`v$E[1, ]` - w_lm$fitted.values)^2) / 9)
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
sqrt( array(1/9,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
w_lm = lm(v$E[1, ] ~ 0 + design, weights = v$weights[1, ])
w_lm$coefficients
fit <- lmFit(v, design)
fit$coefficients[1, ]
w_lm$df.residual
sqrt( array(1/9,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
w_lm$df.residual
array(1/8,c(1,10)
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
w_lm$df.residual
array(1/8,c(1,10))
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(v$weights[1, ])^(1/2)
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ])^(1/2)
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
inv_dg_hlaf
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
inv_dg_half
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
inv_Dg_half
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
inv_Dg_half
solve(diag(v$weights[1, ]))
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
inv_Dg_half %*% solve(diag(v$weights[1, ])) %*% inv_Dg_half
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
inv_Dg_half %*% solve(diag(v$weights[1, ])) %*% inv_Dg_half
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
inv_Dg_half %*% diag(v$weights[1, ]) %*% inv_Dg_half
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
new_X = inv_Dg_half %*% design
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
new_X = inv_Dg_half %*% design
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
X_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
sqrt( array(1/8,c(1,10)) %*% w_lm$residuals^2 )
fit$rank
(length(w_lm$model$`v$E[1, ]`) - 1)
inv_Dg_half = solve(diag(v$weights[1, ]))^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm = lm(v$E[1, ] ~ 0 + design, weights = w[1, ])
w_lm$coefficients
fit <- lmFit(v, design)
fit$coefficients[1, ]
Y = v$E[1, ]
X = design
Dg = diag(w[1, ])
w_lm = lm(Y ~ 0 + X, weights = w[1, ])
w_lm$coefficients
fit <- lmFit(v, design)
fit$coefficients[1, ]
w_lm$df.residual
solve(t(X) %*% solve(Dg) %*% X) %*% t(X) %*% solve(Dg) %*% Y
inv_Dg_half = solve(Dg)^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
inv_Dg_half = solve(Dg)^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
inv_Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + new_X)$coefficients
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm(Y_new ~ 0 + X_new)$coefficients
Y = v$E[1, ]
X = design
Dg = diag(w[1, ])
w_lm = lm(Y ~ 0 + X, weights = Dg)
Y = v$E[1, ]
X = design
Dg = diag(w[1, ])
w_lm = lm(Y ~ 0 + X, weights = w[1,])
w_lm$coefficients
fit <- lmFit(v, design)
fit$coefficients[1, ]
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm_new = lm(Y_new ~ 0 + X_new)
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm_new = lm(Y_new ~ 0 + X_new)
sum((lm_new$fitted.values - Y_new)^2)
w_lm$df.residual
solve(t(X) %*% Dg %*% X) %*% t(X) %*% Dg %*% Y
Dg_half = Dg^(1/2)
Y_new = inv_Dg_half %*% v$E[1, ]
X_new = inv_Dg_half %*% design
solve(t(X_new) %*% X_new) %*% t(X_new) %*% Y_new
lm_new = lm(Y_new ~ 0 + X_new)
sqrt(sum((lm_new$fitted.values - Y_new)^2) / 8)
